#
# Official Language File
# To make your own language file, copy this file and edit the copy
#
# Changes made to this file will be reset!
# Do not edit it!
#

# AccountListView.argument.none: "None"
# AccountListView.gui.lore.balances: "Balances"
# AccountListView.gui.lore.deleteUser: "Confirm deletion of User %target%"
# AccountListView.gui.lore.inBank: "**%value%** in Bank"
# AccountListView.gui.lore.leftClick: "**Left Click** to view Account"
# AccountListView.gui.lore.q: "**Press Q** to **delete**"
# AccountListView.gui.lore.trades: "Trades"
# AccountListView.gui.lore.transactions: "Transactions"
# AccountListView.gui.title: "Accounts > List"
# AccountListView.onlineFilter.disableAction: "Click to **show** Offline Accounts"
# AccountListView.onlineFilter.enableAction: "Click to **hide** Offline Accounts"
# AccountListView.onlineFilter.title: "Visibility"
# AccountStorage.paidWhileOffline: "Your received payments sum while you were offline:"
# AccountTradeListView.argument.items: "Items"
# AccountTradeListView.gui.lore.notPresent: "Click to delete"
# AccountTradeListView.gui.lore.present.removeTrade: "Click to **remove** trade"
# AccountTradeListView.gui.name.notPresent: "Could not find opponent"
# AccountTradeListView.gui.title: "%target% > Trades"
# AccountView.argument.none: "None"
# AccountView.balanceTopBlacklistButton.lore.action.blacklist: "**Click** to **blacklist** account "
# AccountView.balanceTopBlacklistButton.lore.action.whitelist: "**Click** to **whitelist** account"
# AccountView.balanceTopBlacklistButton.lore.desc: "Blacklists from balanceTop"
# AccountView.balanceTopBlacklistButton.name: "BalanceTop Blacklist"
# AccountView.currencyButton.input.bank: "Type in to set **bank balance**"
# AccountView.currencyButton.input.example: "Ex. **1200** for **%value%**"
# AccountView.currencyButton.input.hand: "Type in to set new **balance**"
# AccountView.currencyButton.input.invalidNumber: "Invalid number"
# AccountView.currencyButton.leftClick.issue: "There was an issue setting the hand balance"
# AccountView.currencyButton.lore.bankBalance: "Bank Balance: **%value%**"
# AccountView.currencyButton.lore.leftClick: "**Left Click** to **set** balance"
# AccountView.currencyButton.lore.rightClick: "**Right Click** to **set** bank balance"
# AccountView.currencyButton.lore.rightClick.noBank: "This user does not have a Bank Account"
# AccountView.model.title: "Account > %target%"
# AccountView.tradesButton.lore.click: "Click to view **Trade History**"
# AccountView.tradesButton.lore.lastTradesWith: "Last Trades With"
# AccountView.tradesButton.name: "Trades"
# AccountView.transactionsButton.lore.click: "Click to view Transactions"
# AccountView.transactionsButton.lore.lastTransactionsWith: "Last Transactions with"
# AccountView.transactionsButton.name: "Transactions"
# AddCurrencyView.addRemoveButton.lore.afterMoving: "After moving, your balance is **%value%**"
# AddCurrencyView.addRemoveButton.lore.clickAdd: "Click to **add** more"
# AddCurrencyView.addRemoveButton.lore.clickRemove: "Click to **remove** more"
# AddCurrencyView.addRemoveButton.lore.movedInInventory: "**%value%** will be moved in your Inventory"
# AddCurrencyView.addRemoveButton.name.add: "Add"
# AddCurrencyView.addRemoveButton.name.remove: "Remove"
# AddCurrencyView.alreadyLeftButton.lore.desc1: "The trade has been closed"
# AddCurrencyView.alreadyLeftButton.lore.desc2: "You can **no longer** add items to the trade"
# AddCurrencyView.alreadyLeftButton.name: "Trade Closed"
# AddCurrencyView.confirmButton.lore.balanceAfterwards: "Your balance afterwards will be **%balance%**"
# AddCurrencyView.confirmButton.lore.cantWithThisAmount: "You cannot **confirm** with this amount"
# AddCurrencyView.confirmButton.lore.clickToAdd: "Click to add **%amount%** to this trade"
# AddCurrencyView.confirmButton.name: "Add to Trade"
# AddCurrencyView.construct.addToTrade: "Add %formattedValue% to Trade"
# AddCurrencyView.construct.noCurrencies: "No currencies you can trade with"
# AddCurrencyView.currencySelectButton.lore.notSelected: "Click to select this currency"
# AddCurrencyView.currencySelectButton.lore.selected: "You have selected this currency"
# AddCurrencyView.currencySelectButton.name: "(Selected)"
# AddCurrencyView.typeInButton.lore.click: "Click to type in an exact value"
# AddCurrencyView.typeInButton.name: "Type in Value"
# AddCurrencyView.typeInButton.userInput.actionBar: "Maximum is **%maxValue%** for **%selectedCurrency%**"
# AddCurrencyView.typeInButton.userInput.title.sub: "Type in to set value"
# AddExpLevelView.addRemoveButton.lore: "Click to %action% more"
# AddExpLevelView.addRemoveButton.lore.add: "add"
# AddExpLevelView.addRemoveButton.lore.remove: "remove"
# AddExpLevelView.addRemoveButton.name.add: "Add"
# AddExpLevelView.addRemoveButton.name.level: "level"
# AddExpLevelView.addRemoveButton.name.remove: "Remove"
# AddExpLevelView.addRemoveMaxButton.name.lore: "Click to %action% everything"
# AddExpLevelView.confirm.lore.balanceAfterDeposit: "Your Exp Level after this Trade: "
# AddExpLevelView.confirm.lore.click: "**Click** to select %value%"
# AddExpLevelView.confirmButton.emeraldBlock: "Confirm"
# AddExpLevelView.confirmButton.redstoneBlock.name: "No selected value"
# AddExpLevelView.title.noValue: "Exp Selector > Trade Level"
# AddExpLevelView.title.value: "Exp Selector > Trade %value% Level"
# AddExpLevelView.typeInButton.lore: "Click to type in an exact value"
# AddExpLevelView.typeInButton.name: "Type in Value"
# AddExpLevelView.typeInButton.userInput.actionBar: "Ex. **25** for **25 Levels**"
# AddExpLevelView.typeInButton.userInput.title.sub: "Type in to set value"
# BalanceCommand.reset.bank: "Successfully reset the bank balance of **%currencyName%** for all accounts"
# BalanceCommand.reset.combined: "Successfully reset the hand and bank balance of **%currencyName%** for all accounts"
# BalanceCommand.reset.hand: "Successfully reset the hand balance of **%currencyName%** for all accounts"
BalancesView.Action.Cheating: "**Pressione Q** para **definir** seu saldo"
BalancesView.Action.Cheating.Input.ActionBar: "Ex. **1200** para **%value%**"
BalancesView.Action.Cheating.Input.SubTitle: "Digite para definir um novo **saldo**"
BalancesView.Action.Pay: "**Clique direito** para **pagar** um jogador"
BalancesView.Action.Pay.Fail: "Infelizmente, houve um problema ao fazer essa transação"
BalancesView.Action.Pay.Success: "Você enviou com sucesso %value% para  **%target%**"
# BalancesView.Action.Pay.Success.receive: "You got **%value%** from **%sender%**"
# BalancesView.Action.Pay.failed.payToggle: "**%playerName%** does not accept any payments"
BalancesView.Action.Withdraw: "**Clique esquerdo** para **mover** para o inventário"
# BalancesView.Argument.Balances: "Balances"
BalancesView.Title: "Seus saldos"
# BalancesView.name.bankBalance: "in Bank"
# BankAccountListView.argument.none: "None"
# BankAccountListView.bankAccountDeletedIssuer: "Successfully deleted Bank Account **%name%** of **%owner%**"
# BankAccountListView.bankAccountDeletedOwner: "Your Bank Account **%name%** has been deleted by **%issuer%**"
# BankAccountListView.gui.lore.accesses: "Accesses"
# BankAccountListView.gui.lore.balances: "Balances"
# BankAccountListView.gui.lore.deleteBank: "Confirm deletion of Bank %target%"
# BankAccountListView.gui.lore.leftClick: "**Left Click** to view Bank Account"
# BankAccountListView.gui.lore.owner: "Owner"
# BankAccountListView.gui.lore.q: "**Press Q** to **delete**"
# BankAccountListView.gui.lore.transactions: "Transactions"
# BankAccountListView.gui.title: "Bank Accounts > List"
# BankAccountListView.onlineFilter.disableAction: "Click to **show** Bank of offline Owners"
# BankAccountListView.onlineFilter.enableAction: "Click to **hide** Bank of offline Owners"
# BankAccountListView.onlineFilter.title: "Visibility"
# BankAccountMovementsView.gui.lore.additionalFees: "Additional Fees: %additionalFees%"
# BankAccountMovementsView.gui.lore.agoString: "%time% ago"
# BankAccountMovementsView.gui.lore.createdAt: "Created At: **%createdAt%**"
# BankAccountMovementsView.gui.lore.effectedBalance: "Effected Balance: %balance%"
# BankAccountMovementsView.gui.lore.interactedEmployeeName: "Interacted Player: **%interactedPlayer%**"
# BankAccountMovementsView.gui.lore.removeMovement: "Click to **remove** Movement"
# BankAccountMovementsView.gui.lore.type: "Type: **%type%**"
# BankAccountMovementsView.gui.title: "%target% > Account Movements"
# BankAccountSelectorView.lore: "Click to **select** Bank Account"
# BankAccountSelectorView.title: "Select Bank Account"
# BankBalanceManagementView.free: "Free"
# BankBalanceManagementView.gui.title: "Balance Management"
# BankBalanceManagementView.manageBalanceButton.action.currencyBlocked: "This currency can't be used in the Bank Feature!"
# BankBalanceManagementView.manageBalanceButton.action.transactionLimit: "Your Bank reached his Transaction Limit!"
# BankBalanceManagementView.manageBalanceButton.action.upgradeRequired: "Upgrade your bank account to deposit more than **%amount%** **%currencyName% into your bank account!**"
# BankBalanceManagementView.manageBalanceButton.deposit.issue: "An issue occurred while depositing %amount% to **%bankName%**"
# BankBalanceManagementView.manageBalanceButton.deposit.lore.bankBalanceLimit: "Bank Balance Limit: **%amount%**"
# BankBalanceManagementView.manageBalanceButton.deposit.lore.click: "**Click** to deposit balance"
# BankBalanceManagementView.manageBalanceButton.deposit.lore.depositFee: "Deposit Fee: %amount%"
# BankBalanceManagementView.manageBalanceButton.deposit.lore.description: "Deposit money into your bank account"
# BankBalanceManagementView.manageBalanceButton.deposit.name: "Deposit"
# BankBalanceManagementView.manageBalanceButton.deposit.notEnoughBalance: "You need to have at least %amount% in your hand to deposit %amountWithoutFees% %additionalFees%"
# BankBalanceManagementView.manageBalanceButton.deposit.success: "Successfully deposited %amount% to **%bankName%** %additionalFees%"
# BankBalanceManagementView.manageBalanceButton.deposit.success.additionalFees: "additionally **%amount%** in fees"
# BankBalanceManagementView.manageBalanceButton.deposit.title: "Deposit > Currency Picker"
# BankBalanceManagementView.manageBalanceButton.payment.failed.payToggle: "**%playerName%** does not accept any payments"
# BankBalanceManagementView.manageBalanceButton.payment.issue: "An issue occurred while paying %amount% from **%bankName%**"
# BankBalanceManagementView.manageBalanceButton.payment.notEnoughBalance: "You need to have at least %amount% in the **%bankName%** bank account to pay %amountWithoutFees% %additionalFees%"
# BankBalanceManagementView.manageBalanceButton.payment.overdraftLimitReached: "The Bank Account **%bankName%** has reached his overdraft limit! You can't pay more than %amount% %additionalFees%"
# BankBalanceManagementView.manageBalanceButton.payment.success: "Successfully transferred %balance% **to** **%account%** from **%bankName%** %additionalFees%"
# BankBalanceManagementView.manageBalanceButton.payment.success.receive: "You got **%value%** from Bank Account **%sender%**"
# BankBalanceManagementView.manageBalanceButton.payment.title: "Select Currency"
# BankBalanceManagementView.manageBalanceButton.paymentBank.success: "Successfully transferred %balance% **to** Bank **%account%** from **%bankName%** %additionalFees%"
# BankBalanceManagementView.manageBalanceButton.withdraw.issue: "An issue occurred while withdrawing %amount% from **%bankName%**"
# BankBalanceManagementView.manageBalanceButton.withdraw.lore.click: "**Click** to withdraw balance"
# BankBalanceManagementView.manageBalanceButton.withdraw.lore.description: "Withdraw balance from bank account"
# BankBalanceManagementView.manageBalanceButton.withdraw.lore.withdrawFee: "Withdraw fee: %amount%"
# BankBalanceManagementView.manageBalanceButton.withdraw.name: "Withdraw"
# BankBalanceManagementView.manageBalanceButton.withdraw.notEnoughBalanceOnBank: "You need to have at least %amount% in the **%bankName%** bank account to withdraw %amountWithoutFees% %additionalFees%"
# BankBalanceManagementView.manageBalanceButton.withdraw.overdraftLimitReached: "The Bank Account **%bankName%** has reached his overdraft limit! You can't withdraw more than %amount% %additionalFees%"
# BankBalanceManagementView.manageBalanceButton.withdraw.success: "Successfully withdrew %amount% from **%bankName%** %additionalFees%"
# BankBalanceManagementView.manageBalanceButton.withdraw.title: "Withdraw > Currency Picker"
# BankBalanceManagementView.noPermsButton.lore.description1: "To unlock this function"
# BankBalanceManagementView.noPermsButton.lore.description2: "contact your Bank Owner"
# BankBalanceManagementView.noPermsButton.name: "No Permissions"
# BankBalanceManagementView.paymentButton.lore.description1: "Send balance to other accounts"
# BankBalanceManagementView.paymentButton.lore.description2: "or bank accounts"
# BankBalanceManagementView.paymentButton.lore.leftClick: "**Left Click** pay Account"
# BankBalanceManagementView.paymentButton.lore.paymentFee: "Payment Fee: %amount%"
# BankBalanceManagementView.paymentButton.lore.rightClick: "**Right Click** pay Bank Account"
# BankBalanceManagementView.paymentButton.name: "Payment"
# BankBalancePaymentView.confirm.lore.balanceAfterWithdraw: "Your Balance after the payment:"
# BankBalancePaymentView.confirm.lore.click: "**Click** to select %value%"
# BankBalancePaymentView.lore.additionalFees: "Additional Fees"
# BankBalancePaymentView.lore.overdraftAmountUsage: "Overdraft Amount Usage"
# BankBalancePaymentView.title.noValue: "Bank Payment > Amount"
# BankBalancePaymentView.title.value: "Bank Payment > %value%"
# BankFeature.standingOrderEvent.execute.fail: "The Standing Order of **%account%** wasn't executed as the currency **%currency%** was getting blocked for bank usage!"
# BankFeature.standingOrderEvent.execute.successReceived: "You received %amount% from **%bankAccount%**"
# BankFeature.standingOrderEvent.execute.successSent: "Your Bank Account sent %amount% to **%account%**"
# BankFeatureView.bankAccountCreationCostButton.action.title.main: "Set Bank Account Creation Cost"
# BankFeatureView.bankAccountCreationCostButton.action.title.sub: "Type in a new creation cost"
# BankFeatureView.bankAccountCreationCostButton.lore.creationCost: "Creation Cost: %cost%"
# BankFeatureView.bankAccountCreationCostButton.lore.desc: "Cost to create a new Bank Account"
# BankFeatureView.bankAccountCreationCostButton.lore.leftClick: "**Left Click** to set a price"
# BankFeatureView.bankAccountCreationCostButton.lore.paymentInterval: "Payment Interval: %interval%"
# BankFeatureView.bankAccountCreationCostButton.lore.rightClick: "**Right Click** to set the payment interval"
# BankFeatureView.bankAccountCreationCostButton.name: "Bank Account Creation Cost"
# BankFeatureView.bankBalanceLimit.action.title.main: "Set Bank Balance Limit"
# BankFeatureView.bankBalanceLimit.action.title.sub: "Type in a new bank balance limit"
# BankFeatureView.bankBalanceLimit.lore.click: "**Click** to set a bank balance limit"
# BankFeatureView.bankBalanceLimit.lore.limit: "Bank Balance Limit: %limit%"
# BankFeatureView.bankBalanceLimit.name: "Bank Balance Limit"
# BankFeatureView.construct.title: "Features > Bank"
# BankFeatureView.currencyButton.action.selectCurrency: "Select Currency"
# BankFeatureView.currencyButton.lore.desc1: "This currency will be mainly used"
# BankFeatureView.currencyButton.lore.desc2: "for the bank feature (e.g fees)"
# BankFeatureView.currencyButton.lore.leftClick: "**Left Click** to set the main currency"
# BankFeatureView.currencyButton.lore.pressQ: "**Press Q** to %action% custom items/models"
# BankFeatureView.currencyButton.name: "Used Currency"
# BankFeatureView.duration: "Duration >"
# BankFeatureView.enable.lore.disabled: "Click to **enable** this feature"
# BankFeatureView.enable.lore.enabled: "Click to **disable** this feature"
# BankFeatureView.enable.name: "Toggle"
# BankFeatureView.free: "Free"
# BankFeatureView.interestButton.action.title.main: "Set Interest Percentage"
# BankFeatureView.interestButton.action.title.sub: "Type in a new interest percentage"
# BankFeatureView.interestButton.lore.interestInterval: "Interest Interval"
# BankFeatureView.interestButton.lore.interestPercentage: "Interest Percentage"
# BankFeatureView.interestButton.lore.leftClick: "**Left Click** to set a interest percentage"
# BankFeatureView.interestButton.lore.pressQ: "**Press Q** to %action% interests"
# BankFeatureView.interestButton.lore.rightClick: "**Right Click** to set the interest interval"
# BankFeatureView.interestButton.lore.status: "Status: %status%", Colors.GRAY
# BankFeatureView.interestButton.name: "Interest Management"
# BankFeatureView.nextIn: "Next in"
# BankFeatureView.none: "None"
# BankFeatureView.notAValidNumber: "Not a valid number"
# BankFeatureView.notAValidNumberOrPercentage: "Not a valid number or percentage"
# BankFeatureView.oneTime: "One Time"
# BankFeatureView.permanent: "Permanent"
# BankFeatureView.purgeBankAccounts.confirm.title: "Confirm Purge of Bank Balances"
# BankFeatureView.purgeBankAccounts.lore.click: "**Click** to purge all Bank Accounts"
# BankFeatureView.purgeBankAccounts.lore.desc1: "This will set the bank balance of"
# BankFeatureView.purgeBankAccounts.lore.desc2: "all players to %balance%"
# BankFeatureView.purgeBankAccounts.name: "Purge All Bank Accounts"
# BankFeatureView.startBankBalance.action.title.main: "Set Bank Account Start Balance"
# BankFeatureView.startBankBalance.action.title.sub: "Type in a new bank start balance"
# BankFeatureView.startBankBalance.lore.click: "**Click** to set a start bank account balance"
# BankFeatureView.startBankBalance.lore.startBalance: "Start Bank Balance: %balance%"
# BankFeatureView.startBankBalance.name: "Start Bank Balance"
# BankFeatureView.upgradesButton.lore.desc: "Manage Bank Account upgrades"
# BankFeatureView.upgradesButton.lore.leftClick: "**Left Click** to view upgrades"
# BankFeatureView.upgradesButton.lore.pressQ: "**Press Q** to %action% upgrades"
# BankFeatureView.upgradesButton.lore.status: "Status: %status%"
# BankFeatureView.upgradesButton.name: "Upgrades"
# BankListView.accountBanksAccount: "Banks Account"
# BankListView.bankAccount.balances: "Balances"
# BankListView.bankAccount.open: "**Click** to open bank account"
# BankListView.bankAccount.storedExp: "Stored Exp Level: **%expLevel%** **Level**"
# BankListView.bankAccount.storedItems: "Stored Items: **%itemSize%** **Slots**"
# BankListView.createBankAccount: "Create Bank Account"
# BankListView.createBankAccount.abort: "Abort"
# BankListView.createBankAccount.action: "**Left Click** to create a bank Account"
# BankListView.createBankAccount.failed.notEnoughBalance: "You need at least %value% to create a new Bank Account"
# BankListView.createBankAccount.information: "Information"
# BankListView.createBankAccount.information.creationCost: "Creation Cost"
# BankListView.createBankAccount.information.creationCost.free: "Free"
# BankListView.createBankAccount.information.paymentInterval: "Payment Interval"
# BankListView.createBankAccount.information.paymentInterval.oneTime: "One Time"
# BankListView.createBankAccount.title.actionBar: "Type in a name for your bank account"
# BankListView.createBankAccount.title.main: "Name Your Bank Account"
# BankListView.createBankAccount.title.sub: "Type in a name"
# BankListView.yourBankAccount: "Your Bank Account"
# BankListView.yourBankAccounts: "Your Bank Accounts"
# BankSettingsView.deleteBankAccountButton.action: "**Click** to **permanently** delete your bank account"
# BankSettingsView.deleteBankAccountButton.delete.success: "Successfully deleted your bank account **(%bankName%)**"
# BankSettingsView.deleteBankAccountButton.delete.title: "Confirm Deletion Of Bank Account"
# BankSettingsView.deleteBankAccountButton.desc1: "All your remained balances will be automatically"
# BankSettingsView.deleteBankAccountButton.desc2: "withdrawn to your hand balance"
# BankSettingsView.deleteBankAccountButton.name: "Delete Bank Account"
# BankSettingsView.free: "Free"
# BankSettingsView.gui.title: "Bank Settings"
# BankSettingsView.noPermsButton.lore.description1: "To unlock this function"
# BankSettingsView.noPermsButton.lore.description2: "contact your Bank Owner"
# BankSettingsView.noPermsButton.name: "No Permissions"
# BankSettingsView.notAValidNumber: "Not a valid number"
# BankSettingsView.renameButton.lore.click: "Click to **rename** bank account"
# BankSettingsView.renameButton.name: "Rename"
# BankUpgradeView.gui.confirmUpgrade: "Confirm upgrade to %upgradeName%"
# BankUpgradeView.gui.lore.bankBalanceLimit: "Bank Balance Limit: **%limit%**"
# BankUpgradeView.gui.lore.clickPurchase: "**Click** to purchase"
# BankUpgradeView.gui.lore.currentUpgrade: "Your current Bank Upgrade"
# BankUpgradeView.gui.lore.default: "Default Upgrade"
# BankUpgradeView.gui.lore.details: "Details:"
# BankUpgradeView.gui.lore.employeeLimit: "Employee Limit: **%limit%**"
# BankUpgradeView.gui.lore.expStorageLimit: "Exp Storage Limit: **%limit%**"
# BankUpgradeView.gui.lore.free: "Free"
# BankUpgradeView.gui.lore.itemStorageLimit: "Item Storage Limit: **%limit%**"
# BankUpgradeView.gui.lore.noUpgradesAvailable: "No Upgrades Available"
# BankUpgradeView.gui.lore.notEnoughBalance: "You need at least %moneyString% to purchase this upgrade"
# BankUpgradeView.gui.lore.price: "Price: %moneyString%"
# BankUpgradeView.gui.lore.refund: "(Refund)"
# BankUpgradeView.gui.lore.standingOrderLimit: "Standing Order Limit: **%limit%**"
# BankUpgradeView.gui.lore.transactionLimit: "Transaction Limit: **%limit%**"
# BankUpgradeView.gui.lore.upgradeSuccessful: "Successfully upgraded your bank account to %upgradeName% for %moneyString%"
# BankUpgradeView.gui.title: "Bank Upgrades"
# BankView.bankSettingsButton.lore.click: "**Click** to manage"
# BankView.bankSettingsButton.lore.description1: "Change the settings of this"
# BankView.bankSettingsButton.lore.description2: "bank account (Icon, Name,"
# BankView.bankSettingsButton.lore.description3: "Ownership and deletion)"
# BankView.bankSettingsButton.name: "Bank Settings"
# BankView.expStorage.actionDeposit.success: "Successfully deposited **%level%** Exp level to your bank account's exp storage"
# BankView.expStorage.actionDeposit.success.value: "for %value%"
# BankView.expStorage.actionDeposit.upgradeRequired: "Upgrade your bank account to deposit more than **%value%** levels into your bank account's exp storage!"
# BankView.expStorage.actionWithdraw.success: "Successfully withdrawn **%level%** Exp level from your bank account's exp storage to yourself"
# BankView.expStorage.actionWithdraw.success.value: "for %value%"
# BankView.expStorageButton.actionDeposit.notEnoughFunds: "You need at least %value% in your bank account to deposit Exp!"
# BankView.expStorageButton.actionWithdraw.notEnoughFunds: "You need at least %value% in your bank account to withdraw Exp!"
# BankView.expStorageButton.lore.depositFee: "Deposit fee: **%value%**"
# BankView.expStorageButton.lore.description1: "Save exp level in your"
# BankView.expStorageButton.lore.description2: "bank account's exp storage"
# BankView.expStorageButton.lore.expLimit: "Exp level limit: **%level%** level"
# BankView.expStorageButton.lore.expStored: "Currently Exp stored: **%level%** level"
# BankView.expStorageButton.lore.leftClick: "**Left Click** to **deposit** to Exp Storage"
# BankView.expStorageButton.lore.rightClick: "**Right Click** to **withdraw** from Exp Storage"
# BankView.expStorageButton.lore.rightClickUnlock: "**Right Click** to **unlock** Exp Storage for %value%"
# BankView.expStorageButton.lore.withdrawFee: "Withdraw fee: **%value%**"
# BankView.expStorageButton.name: "Exp Storage"
# BankView.expStorageButton.notEnoughFunds: "You need at least %value% in your bank account to purchase exp storage"
# BankView.free: "Free"
# BankView.gui.title: "Managing"
# BankView.itemStorageButton.lore.depositFee: "Deposit Fee **(Per Slot)**"
# BankView.itemStorageButton.lore.description1: "Store items in your bank"
# BankView.itemStorageButton.lore.description2: "account's item storage"
# BankView.itemStorageButton.lore.leftClick: "**Left Click** to manage item storage"
# BankView.itemStorageButton.lore.limit: "Item storage limit: **%limit%** slots"
# BankView.itemStorageButton.lore.rightClick: "**Right Click** to **unlock** ItemStorage for "
# BankView.itemStorageButton.lore.storedItems: "Stored items: **%storedItems%** slots"
# BankView.itemStorageButton.lore.withdrawFee: "Withdraw Fee **(Per Slot)**"
# BankView.itemStorageButton.name: "Item Storage"
# BankView.itemStorageButton.notEnoughFunds: "You need at least %value% in your bank account to purchase item storage"
# BankView.itemStorageButton.notOneTimePurchase: "(This is **NOT** a **OneTime** purchase)"
# BankView.itemStorageButton.notOneTimePurchase.value: "(it has to be paid every **%time%**)"
# BankView.itemStorageButton.oneTimePurchase: "(This is a **OneTime** purchase)"
# BankView.manageAccessButton.lore.click: "**Click** to manage access"
# BankView.manageAccessButton.lore.description1: "There you can give other accounts"
# BankView.manageAccessButton.lore.description2: "access to your bank account"
# BankView.manageAccessButton.name: "Manage Access"
# BankView.manageBalanceButton.action.transactionLimit: "Your Bank reached his Transaction Limit!"
# BankView.manageBalanceButton.lore.balances: "Balances"
# BankView.manageBalanceButton.lore.click: "**Click** to manage balances"
# BankView.manageBalanceButton.lore.description1: "Deposit & Withdraw balance as well"
# BankView.manageBalanceButton.lore.description2: "as sending balance to other "
# BankView.manageBalanceButton.lore.description3: "Accounts and Bank Accounts"
# BankView.manageBalanceButton.name: "Manage Balances"
# BankView.never: "Never"
# BankView.noPermsButton.lore.description1: "To unlock this function"
# BankView.noPermsButton.lore.description2: "contact your Bank Owner"
# BankView.noPermsButton.name: "No Permissions"
# BankView.oneTime: "One Time"
# BankView.recentTransactionsButton.lore.click: "**Click** to view detailed listing"
# BankView.recentTransactionsButton.lore.desc: "View and manage all made transactions"
# BankView.recentTransactionsButton.lore.desc2: "on this Bank Account"
# BankView.recentTransactionsButton.lore.noTransactions: "No transactions made yet"
# BankView.recentTransactionsButton.lore.phrase: "**%time% ago** by **%issuer%** **(%transactionType%)**"
# BankView.recentTransactionsButton.name: "Recent Transactions"
# BankView.standingOrdersButton.lore.click: "**Click** to manage"
# BankView.standingOrdersButton.lore.description1: "Create and manage standing"
# BankView.standingOrdersButton.lore.description2: "orders (eg. loans)"
# BankView.standingOrdersButton.name: "Standing Order"
# BankView.upgradesButton.action: "**Click** to manage upgrades"
# BankView.upgradesButton.desc1: "Upgrade your bank account"
# BankView.upgradesButton.desc2: "limitations"
# BankView.upgradesButton.title: "Upgrades"
# CurrencyListView.createCurrencyButton.lore: "Click to **create** a new currency"
# CurrencyListView.createCurrencyButton.name: "Create Currency"
# CurrencyListView.createCurrencyButton.userInput.defaultDescription: "This is a description"
# CurrencyListView.createCurrencyButton.userInput.noColorCodes: "You cannot use color codes inside a currency name"
# CurrencyListView.createCurrencyButton.userInput.title.main: "Create Currency"
# CurrencyListView.createCurrencyButton.userInput.title.sub: "Type in a name for the currency"
# CurrencyListView.currencyButton.lore.confirmDeletion: "Confirm deletion of currency"
# CurrencyListView.currencyButton.lore.confirmReset: "Confirm reset of currency"
# CurrencyListView.currencyButton.lore.description: "Description"
# CurrencyListView.currencyButton.lore.format: "Format"
# CurrencyListView.currencyButton.lore.leftClick: "**Left Click** to edit currency"
# CurrencyListView.currencyButton.lore.pressQ: "**Press Q** to **delete**"
# CurrencyListView.currencyButton.lore.rightClick: "**Right Click** to **reset** all currency balances"
# CurrencyListView.currencyButton.lore.startBalance: "Start Balance"
# CurrencyListView.currencyButton.lore.vaultCurrency: "This currency will be used by **Vault**!"
# CurrencyListView.model.title: "Overview > Currencies"
# CurrencyListView.reorder.action: "Click to modify the order"
# CurrencyListView.reorder.title: "Change Order"
# CurrencyPicker.construct.lore: "Click to **select**"
# CurrencyReorderView.entry.deselectAction: "**Left Click** to **deselect** this Currency"
# CurrencyReorderView.entry.grabAction: "**Left Click** to **grab** this Currency"
# CurrencyReorderView.entry.swapAction: "**Left Click** to swap with **%currencyName%**"
# CurrencyReorderView.gui.title: "Vault Types > Reorder"
# CurrencySettingsView.bankUsageButton.lore.blocked: "blocked"
# CurrencySettingsView.bankUsageButton.lore.click: "Click to to %action% bank usage"
# CurrencySettingsView.bankUsageButton.lore.click.block: "block"
# CurrencySettingsView.bankUsageButton.lore.click.unblock: "unblock"
# CurrencySettingsView.bankUsageButton.lore.desc1: "If blocked this currency won't be"
# CurrencySettingsView.bankUsageButton.lore.desc2: "used by UltraEconomy's Bank Feature"
# CurrencySettingsView.bankUsageButton.lore.isMainCurrency: "You can't block the main used currency"
# CurrencySettingsView.bankUsageButton.lore.notBlocked: "not blocked"
# CurrencySettingsView.bankUsageButton.name: "Bank Usage"
# CurrencySettingsView.bankUsageButton.notEnabled.lore.1: "You have to enable the bank feature,"
# CurrencySettingsView.bankUsageButton.notEnabled.lore.2: "before you can configure this option"
# CurrencySettingsView.commands.lore.clickDisable: "**Click** to **disable** this setting"
# CurrencySettingsView.commands.lore.clickEnable: "**Click** to **enable** this setting"
# CurrencySettingsView.decimalsButton.desc1: "If **enabled**, this currency can be"
# CurrencySettingsView.decimalsButton.desc2: "used with decimal places"
# CurrencySettingsView.decimalsButton.lore.click: "**Click** to %status% decimal usage"
# CurrencySettingsView.decimalsButton.name: "Decimal Usage"
# CurrencySettingsView.exchangeableButton.lore.desc1: "If **enabled**, players can exchange"
# CurrencySettingsView.exchangeableButton.lore.desc2: "this currency into another currency"
# CurrencySettingsView.exchangeableButton.name: "Exchange Usage"
# CurrencySettingsView.payableButton.lore: "Allow players to use this currency for paying"
# CurrencySettingsView.payableButton.name: "Pay with Currency"
# CurrencySettingsView.status: "Status"
# CurrencySettingsView.taxFreeButton.desc1: "If **enabled**, all interactions are"
# CurrencySettingsView.taxFreeButton.desc2: "excluded from taxes"
# CurrencySettingsView.taxFreeButton.name: "Tax Free"
# CurrencySettingsView.title: "Toggleable Settings"
# CurrencySettingsView.tradableButton.lore: "Allow players to use this currency in trades"
# CurrencySettingsView.tradableButton.name: "Trade with Currency"
# CurrencySettingsView.withdrawableButton.lore.desc1: "Allow players to withdraw this"
# CurrencySettingsView.withdrawableButton.lore.desc2: "currency to their inventory"
# CurrencySettingsView.withdrawableButton.name: "Withdraw Currency"
# CurrencySoundSettingsView.gui.button.lore.pressQ: "**Press Q** to **reset** sound"
# CurrencySoundSettingsView.gui.button.pickingUpSound: "Picking Up Sound"
# CurrencySoundSettingsView.gui.button.pickingUpSound.desc1: "This sound will play when the physical"
# CurrencySoundSettingsView.gui.button.pickingUpSound.desc2: "currency is picked up by a player"
# CurrencySoundSettingsView.gui.button.pickingUpSound.lore.click: "**Left Click** to **select** sound"
# CurrencySoundSettingsView.gui.button.pickingUpSound.lore.rightClick: "**Right Click** to **play** sound"
# CurrencySoundSettingsView.gui.button.pickingUpSound.lore.shiftClick: "**Shift Click** to **redefine** pitch and volume"
# CurrencySoundSettingsView.gui.button.pickingUpSound.lore.sound: "Selected Sound: **%soundName%**"
# CurrencySoundSettingsView.gui.button.pitch: "Current Pitch: **%pitch%**"
# CurrencySoundSettingsView.gui.button.receivingSound: "Receiving Sound"
# CurrencySoundSettingsView.gui.button.receivingSound.desc1: "This sound will play when the currency"
# CurrencySoundSettingsView.gui.button.receivingSound.desc2: "was received through a payment or trade"
# CurrencySoundSettingsView.gui.button.receivingSound.lore.click: "**Left Click** to **select** sound"
# CurrencySoundSettingsView.gui.button.receivingSound.lore.rightClick: "**Right Click** to **play** sound"
# CurrencySoundSettingsView.gui.button.receivingSound.lore.shiftClick: "**Shift Click** to **redefine** pitch and volume"
# CurrencySoundSettingsView.gui.button.receivingSound.lore.sound: "Selected Sound: **%soundName%**"
# CurrencySoundSettingsView.gui.button.volume: "Current Volume: **%volume%**"
# CurrencySoundSettingsView.gui.title: "Sound Settings"
# CurrencyValueSelectorView.add: "Add"
# CurrencyValueSelectorView.addRemoveButton.lore.clickAdd: "Click to **add** more"
# CurrencyValueSelectorView.addRemoveButton.lore.clickRemove: "Click to **remove** more"
# CurrencyValueSelectorView.addRemoveMaxButton.lore.clickAdd: "Click to **add** everything"
# CurrencyValueSelectorView.addRemoveMaxButton.lore.clickRemove: "Click to **remove** everything"
# CurrencyValueSelectorView.confirmButton.name: "Confirm"
# CurrencyValueSelectorView.confirmButton.noSelectedValue: "No selected value"
# CurrencyValueSelectorView.remove: "Remove"
# CurrencyValueSelectorView.typeInButton.lore: "Click to type in an exact value"
# CurrencyValueSelectorView.typeInButton.name: "Type in Value"
# CurrencyValueSelectorView.typeInButton.userInput.title.example: "Ex. **1200** for %formattedValue%"
# CurrencyValueSelectorView.typeInButton.userInput.title.sub: "Type in to set value"
# CurrencyView.descriptionButton.action.title.main: "Currency Description"
# CurrencyView.descriptionButton.action.title.sub: "Type in a new description"
# CurrencyView.descriptionButton.lore.click: "Click to **edit** description"
# CurrencyView.descriptionButton.name: "Description"
# CurrencyView.formatButton.action.title.actionBar: "Use the placeholder **{Amount}** for the amount"
# CurrencyView.formatButton.action.title.main: "Set Format"
# CurrencyView.formatButton.action.title.sub: "Type in a new singular format"
# CurrencyView.formatButton.action2.title.sub2: "Type in a new plural format"
# CurrencyView.formatButton.lore.leftClick: "**Left Click** to change **Singular Format**"
# CurrencyView.formatButton.lore.plural: "Plural Format: %format%"
# CurrencyView.formatButton.lore.rightClick: "**Right Click** to change **Plural Format**"
# CurrencyView.formatButton.lore.singular: "Singular Format: %format%"
# CurrencyView.formatButton.name: "Format"
# CurrencyView.iconButton.action.example: "Example: **0** or **215**"
# CurrencyView.iconButton.action.right.title.main: "Custom Model Data"
# CurrencyView.iconButton.action.right.title.sub: "Type in Custom Model ID"
# CurrencyView.iconButton.action.shiftLeft.title.main: "Durability"
# CurrencyView.iconButton.action.shiftLeft.title.sub: "Type in Durability value"
# CurrencyView.iconButton.lore.customModelData: "Custom Model ID: **%customModelData%**"
# CurrencyView.iconButton.lore.damageValue: "Damage Value: **%damage%**"
# CurrencyView.iconButton.lore.icon: "Icon: **%icon%**"
# CurrencyView.iconButton.lore.leftClick: "**Left Click** to **change** Icon"
# CurrencyView.iconButton.lore.rightClick: "**Right Click** to **change** Custom Model Data"
# CurrencyView.iconButton.lore.shiftLeftClick: "**Shift + Left Click** to **change** Damage Value"
# CurrencyView.iconButton.name: "Icon"
# CurrencyView.importDataButton.lore.available: "Available Importers"
# CurrencyView.importDataButton.lore.click: "Click to **select** plugin"
# CurrencyView.importDataButton.lore.description: "Import Balances from a different plugin"
# CurrencyView.importDataButton.namne: "Import Data");
# CurrencyView.notAValidNumber: "Not a valid number"
# CurrencyView.renameButton.action.noColorCodes: "You cannot use color codes inside a currency name"
# CurrencyView.renameButton.action.title.main: "Rename Currency"
# CurrencyView.renameButton.action.title.sub: "Type in a new name"
# CurrencyView.renameButton.lore.click: "Click to **rename**"
# CurrencyView.renameButton.name: "Rename"
# CurrencyView.settingsButton.lore.click: "Click to **manage**"
# CurrencyView.settingsButton.lore.desc1: "Define if this currency can"
# CurrencyView.settingsButton.lore.desc2: "be used in certain aspects like"
# CurrencyView.settingsButton.lore.desc3: "paying, withdrawing, trading"
# CurrencyView.settingsButton.lore.desc4: "bank usage, etc."
# CurrencyView.settingsButton.name: "Toggleable Settings"
# CurrencyView.soundsButton.lore.click: "Click to **manage**"
# CurrencyView.soundsButton.lore.desc1: "Define optionally custom sounds"
# CurrencyView.soundsButton.lore.desc2: "for this currency when picking"
# CurrencyView.soundsButton.lore.desc3: "it up or receiving them"
# CurrencyView.soundsButton.name: "Custom Sounds"
# CurrencyView.startBalanceButton.action.title.main: "Currency Start Balance"
# CurrencyView.startBalanceButton.action.title.sub: "Type in a new start Balance"
# CurrencyView.startBalanceButton.lore.click: "Click to **edit** start Balance"
# CurrencyView.startBalanceButton.name: "Start Balance"
# CurrencyView.title: "Editing"
# CurrencyView.toggleButton.lore.desc1: "If **disabled**, this currency will be excluded"
# CurrencyView.toggleButton.lore.desc2: "from all aspects of **UltraEconomy**"
# CurrencyView.toggleButton.lore.disabled: "Click to **enable** this currency"
# CurrencyView.toggleButton.lore.enabled: "Click to **disable** this currency"
# CurrencyView.toggleButton.lore.isBankCurrency1: "This currency is the **bank currency**"
# CurrencyView.toggleButton.lore.isBankCurrency2: "and cannot be disabled until it was changed"
# CurrencyView.toggleButton.name: "Toggle"
# CurrencyView.vaultButton.lore.click: "Click to make this the **Vault** Currency"
# CurrencyView.vaultButton.lore.desc1: "There can only be one Vault Currency at the time which"
# CurrencyView.vaultButton.lore.desc2: "is hooking **Vault**"
# CurrencyView.vaultButton.lore.desc3: "This Setting will only be saved for this Server"
# CurrencyView.vaultButton.lore.isVaultCurrency: "This currency is currently **Vault** enabled"
# CurrencyView.vaultButton.name: "Vault"
# DepositBankBalance.confirm.lore.balanceAfterDeposit: "Your Balance after the deposit:"
# DepositBankBalance.confirm.lore.click: "**Click** to deposit %value to %bankAccount%**"
# DepositBankBalance.lore.additionalFees: "Additional Fees"
# DepositBankBalance.title.noValue: "Deposit to %bankAccount% > Amount"
# DepositBankBalance.title.value: "Deposit %value% to %bankAccount%"
# EmployeeListView.addEmployee.addAction: "**Click** to add a Employee via GUI"
# EmployeeListView.addEmployee.error: "An error occurred while creating the new access to the bank account due to server settings"
# EmployeeListView.addEmployee.feesArgument: "and %amount% in fees"
# EmployeeListView.addEmployee.limitReached: "You have reached the limit of accesses for this bank account"
# EmployeeListView.addEmployee.needAtLeast: "You need at least %amount% to create a new access"
# EmployeeListView.addEmployee.newAccess: "Successfully created a new access to **%bankName%** for **%account%** %fees%"
# EmployeeListView.addEmployee.title: "Add Employee"
# EmployeeListView.employeeButton.error: "An error occurred while deleting the access from the bank account due to server settings"
# EmployeeListView.employeeButton.lore.allowed: "Allowed"
# EmployeeListView.employeeButton.lore.disallowed: "Disallowed"
# EmployeeListView.employeeButton.lore.leftClick: "**Left Click** to view Permissions"
# EmployeeListView.employeeButton.lore.pressQ: "**Press Q** to remove access"
# EmployeeListView.employeeButton.permissions.accountMovements: "Account Movements: %status%"
# EmployeeListView.employeeButton.permissions.changeIcon: "Change Icon: %status%"
# EmployeeListView.employeeButton.permissions.deleteBankAccount: "Delete Bank Account: %status%"
# EmployeeListView.employeeButton.permissions.deposit: "Deposit Balance: %status%"
# EmployeeListView.employeeButton.permissions.expStorageDeposit: "ExpStorage Deposit: %status%"
# EmployeeListView.employeeButton.permissions.expStorageWithdraw: "ExpStorage Withdraw: %status%"
# EmployeeListView.employeeButton.permissions.itemStorageDeposit: "ItemStorage Deposit: %status%"
# EmployeeListView.employeeButton.permissions.itemStorageWithdraw: "ItemStorage Withdraw: %status%"
# EmployeeListView.employeeButton.permissions.payingBalance: "Paying Balance: %status%"
# EmployeeListView.employeeButton.permissions.rename: "Rename Bank Account: %status%"
# EmployeeListView.employeeButton.permissions.title: "Permissions:"
# EmployeeListView.employeeButton.permissions.transferOwnership: "Transfer Ownership: %status%"
# EmployeeListView.employeeButton.permissions.withdraw: "Withdraw Balance: %status%"
# EmployeeListView.employeeButton.success: "You have successfully deleted the access for **%accessName%** of the bank account **%bankName%**"
# EmployeeListView.gui.title: "Employees > List"
# EmployeeView.action: "**Click** to %action%"
# EmployeeView.action.allow: "Allow"
# EmployeeView.action.disallow: "Disallow"
# EmployeeView.permission.accountMovements: "Account Movements"
# EmployeeView.permission.balanceDeposit: "Depositing Balance"
# EmployeeView.permission.balancePay: "Paying Balance"
# EmployeeView.permission.balanceWithdraw: "Withdrawing Balance"
# EmployeeView.permission.changeIcon: "Change Icon"
# EmployeeView.permission.deleteBankAccount: "Delete Bank Account"
# EmployeeView.permission.expStorageDeposit: "ExpStorage Deposit"
# EmployeeView.permission.expStorageWithdraw: "ExpStorage Withdraw"
# EmployeeView.permission.itemStorageDeposit: "ItemStorage Deposit"
# EmployeeView.permission.itemStorageWithdraw: "ItemStorage Withdraw"
# EmployeeView.permission.rename: "Rename"
# EmployeeView.permission.transferOwnership: "Transfer Ownership"
# EmployeeView.title: "%holder% > Permissions"
# ExpStorageDepositView.confirm.lore.balanceAfterDeposit: "Your Exp Level after deposit: "
# ExpStorageDepositView.confirm.lore.click: "**Click** to select %value%"
# ExpStorageDepositView.title.noValue: "Exp Storage > Deposit Level"
# ExpStorageDepositView.title.value: "Exp Storage > %value%"
# ExpStorageWithdrawView.confirm.lore.balanceAfterDeposit: "Exp Storage level after withdraw: "
# ExpStorageWithdrawView.confirm.lore.click: "**Click** to select %value%"
# ExpStorageWithdrawView.title.noValue: "Exp Storage > Withdraw Level"
# ExpStorageWithdrawView.title.value: "Exp Storage > %value%"
# ExpValueSelectorView.addRemoveButton.lore: "Click to %action% more"
# ExpValueSelectorView.addRemoveButton.lore.add: "add"
# ExpValueSelectorView.addRemoveButton.lore.remove: "remove"
# ExpValueSelectorView.addRemoveButton.name.add: "Add"
# ExpValueSelectorView.addRemoveButton.name.level: "level"
# ExpValueSelectorView.addRemoveButton.name.remove: "Remove"
# ExpValueSelectorView.addRemoveMaxButton.name.lore: "Click to %action% everything"
# ExpValueSelectorView.confirmButton.emeraldBlock: "Confirm"
# ExpValueSelectorView.confirmButton.redstoneBlock.name: "No selected value"
# ExpValueSelectorView.typeInButton.lore: "Click to type in an exact vaulue"
# ExpValueSelectorView.typeInButton.name: "Type in Value"
# ExpValueSelectorView.typeInButton.userInput.actionBar: "Ex. **25** for **25 Levels**"
# ExpValueSelectorView.typeInButton.userInput.title.sub: "Type in to set value"
# ExportCurrencyView.addRemoveButtonLore.1: "**%value%** will be moved in your Inventory"
# ExportCurrencyView.addRemoveButtonLore.2: "After moving, your balance is **%balance%**"
# ExportCurrencyView.confirmationButtonLore.1: "Click to move **move** to Inventory"
# ExportCurrencyView.confirmationButtonLore.2: "**%balance%** will be moved to your Inventory"
# ExportCurrencyView.confirmationButtonLore.3: "Your balance afterwards is **%balance%**"
# ExportCurrencyView.onConfirm.notEnoughSpace: "You don´t have enough Space in your Inventory"
# ExportCurrencyView.title: "Move %balance% to Inventory"
# ExtraFeesView.depositFeeButton.action.actionBar: "eg. 5, 10, 100 or 5%, 50%, 20% of the deposing balance"
# ExtraFeesView.depositFeeButton.action.title.main: "Deposit Fee"
# ExtraFeesView.depositFeeButton.action.title.sub: "Enter deposit fee"
# ExtraFeesView.depositFeeButton.lore.click: "**Click** to set deposit fee"
# ExtraFeesView.depositFeeButton.lore.depositFee: "Deposit Fee: %fee%"
# ExtraFeesView.depositFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.depositFeeButton.lore.description2: "deposing balance"
# ExtraFeesView.depositFeeButton.name: "Deposit Fee"
# ExtraFeesView.expStorageDepositFeeButton.action.actionBar: "Will be charged at depositing Exp levels to the ExpStorage"
# ExtraFeesView.expStorageDepositFeeButton.action.title.main: "ExpStorage Deposit Fee"
# ExtraFeesView.expStorageDepositFeeButton.action.title.sub: "Enter ExpStorage deposit fee"
# ExtraFeesView.expStorageDepositFeeButton.lore.click: "**Click** to set ExpStorage deposit fee"
# ExtraFeesView.expStorageDepositFeeButton.lore.depositFee: "Deposit Fee: %fee%"
# ExtraFeesView.expStorageDepositFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.expStorageDepositFeeButton.lore.description2: "depositing Exp levels to the"
# ExtraFeesView.expStorageDepositFeeButton.lore.description3: "ExpStorage"
# ExtraFeesView.expStorageDepositFeeButton.name: "ExpStorage Deposit Fee"
# ExtraFeesView.expStorageWithdrawFeeButton.action.actionBar: "Will be charged at withdrawing Exp levels from the ExpStorage"
# ExtraFeesView.expStorageWithdrawFeeButton.action.title.main: "ExpStorage Withdraw Fee"
# ExtraFeesView.expStorageWithdrawFeeButton.action.title.sub: "Enter ExpStorage withdraw fee"
# ExtraFeesView.expStorageWithdrawFeeButton.lore.click: "**Click** to set ExpStorage withdraw fee"
# ExtraFeesView.expStorageWithdrawFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.expStorageWithdrawFeeButton.lore.description2: "withdrawing exp levels from"
# ExtraFeesView.expStorageWithdrawFeeButton.lore.description3: "the ExpStorage"
# ExtraFeesView.expStorageWithdrawFeeButton.lore.withdrawFee: "Withdraw Fee: %fee%"
# ExtraFeesView.expStorageWithdrawFeeButton.name: "ExpStorage Withdraw Fee"
# ExtraFeesView.free: "Free"
# ExtraFeesView.iconChangeFeeButton.action.actionBar: "Will be charged at changing the bank account's icon"
# ExtraFeesView.iconChangeFeeButton.action.title.main: "Icon Change Fee"
# ExtraFeesView.iconChangeFeeButton.action.title.sub: "Enter icon change fee"
# ExtraFeesView.iconChangeFeeButton.lore.click: "**Click** to set icon change fee"
# ExtraFeesView.iconChangeFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.iconChangeFeeButton.lore.description2: "changing the bank account's icon"
# ExtraFeesView.iconChangeFeeButton.lore.iconChangeFee: "Icon Change Fee: %fee%"
# ExtraFeesView.iconChangeFeeButton.name: "Icon Change Fee"
# ExtraFeesView.itemStorageDepositFeeButton.action.actionBar: "Will be charged at depositing items to the ItemStorage per slot"
# ExtraFeesView.itemStorageDepositFeeButton.action.title.main: "ItemStorage Deposit Fee"
# ExtraFeesView.itemStorageDepositFeeButton.action.title.sub: "Enter ItemStorage deposit fee"
# ExtraFeesView.itemStorageDepositFeeButton.lore.click: "**Click** to set ItemStorage deposit fee"
# ExtraFeesView.itemStorageDepositFeeButton.lore.depositFee: "Deposit Fee: %fee%"
# ExtraFeesView.itemStorageDepositFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.itemStorageDepositFeeButton.lore.description2: "depositing items to the"
# ExtraFeesView.itemStorageDepositFeeButton.lore.description3: "ItemStorage **per slot**"
# ExtraFeesView.itemStorageDepositFeeButton.name: "ItemStorage Deposit Fee"
# ExtraFeesView.itemStorageWithdrawFeeButton.action.actionBar: "Will be charged at withdrawing items from the ItemStorage per slot"
# ExtraFeesView.itemStorageWithdrawFeeButton.action.title.main: "ItemStorage Withdraw Fee"
# ExtraFeesView.itemStorageWithdrawFeeButton.action.title.sub: "Enter ItemStorage withdraw fee"
# ExtraFeesView.itemStorageWithdrawFeeButton.lore.click: "**Click** to set ItemStorage withdraw fee"
# ExtraFeesView.itemStorageWithdrawFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.itemStorageWithdrawFeeButton.lore.description2: "withdrawing items from the"
# ExtraFeesView.itemStorageWithdrawFeeButton.lore.description3: "ItemStorage **per slot**"
# ExtraFeesView.itemStorageWithdrawFeeButton.lore.withdrawFee: "Withdraw Fee: %fee%"
# ExtraFeesView.itemStorageWithdrawFeeButton.name: "ItemStorage Withdraw Fee"
# ExtraFeesView.notAValidNumber: "Not a valid number"
# ExtraFeesView.notAValidNumberOrPercentage: "Not a valid number or percentage"
# ExtraFeesView.renameFeeButton.action.actionBar: "Will be charged at renaming the bank account"
# ExtraFeesView.renameFeeButton.action.title.main: "Rename Fee"
# ExtraFeesView.renameFeeButton.action.title.sub: "Enter rename fee"
# ExtraFeesView.renameFeeButton.lore.click: "**Click** to set rename fee"
# ExtraFeesView.renameFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.renameFeeButton.lore.description2: "renaming the bank account"
# ExtraFeesView.renameFeeButton.lore.renameFee: "Rename Fee: %fee%"
# ExtraFeesView.renameFeeButton.name: "Rename Fee"
# ExtraFeesView.title: "Bank > Extra Fees"
# ExtraFeesView.transactionFeeButton.action.actionBar: "eg. 5, 10, 100 or 5%, 50%, 20% of the transaction"
# ExtraFeesView.transactionFeeButton.action.title.main: "Transaction Fee"
# ExtraFeesView.transactionFeeButton.action.title.sub: "Enter transaction fee"
# ExtraFeesView.transactionFeeButton.lore.click: "**Click** to set transaction fee"
# ExtraFeesView.transactionFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.transactionFeeButton.lore.description2: "making a transaction"
# ExtraFeesView.transactionFeeButton.lore.transactionFee: "Transaction Fee: %fee%"
# ExtraFeesView.transactionFeeButton.name: "Transaction Fee"
# ExtraFeesView.transferOwnershipFeeButton.action.actionBar: "Will be charged at transferring ownership"
# ExtraFeesView.transferOwnershipFeeButton.action.title.main: "Transfer Ownership Fee"
# ExtraFeesView.transferOwnershipFeeButton.action.title.sub: "Enter transfer ownership fee"
# ExtraFeesView.transferOwnershipFeeButton.lore.click: "**Click** to set transfer ownership fee"
# ExtraFeesView.transferOwnershipFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.transferOwnershipFeeButton.lore.description2: "transferring ownership"
# ExtraFeesView.transferOwnershipFeeButton.lore.transferOwnershipFee: "Transfer Ownership Fee: %fee%"
# ExtraFeesView.transferOwnershipFeeButton.name: "Transfer Ownership Fee"
# ExtraFeesView.withdrawFeeButton.action.actionBar: "eg. 5, 10, 100 or 5%, 50%, 20% of the withdrawing balance"
# ExtraFeesView.withdrawFeeButton.action.title.main: "Withdraw Fee"
# ExtraFeesView.withdrawFeeButton.action.title.sub: "Enter withdraw fee"
# ExtraFeesView.withdrawFeeButton.lore.click: "**Click** to set withdraw fee"
# ExtraFeesView.withdrawFeeButton.lore.description1: "This fee will be charged at"
# ExtraFeesView.withdrawFeeButton.lore.description2: "withdrawing balance"
# ExtraFeesView.withdrawFeeButton.lore.withdrawFee: "Withdraw Fee: %fee%"
# ExtraFeesView.withdrawFeeButton.name: "Withdraw Fee"
# FeatureListView.bankButton.lore.disabled: "This feature is currently **disabled**"
# FeatureListView.bankButton.name: "Bank Feature"
# FeatureListView.dropMoneyOnDeathButton.lore.disabled: "This feature is currently **disabled**"
# FeatureListView.dropMoneyOnDeathButton.lore.enabled.1: "Settings"
# FeatureListView.dropMoneyOnDeathButton.lore.enabled.2: "**-** Drop on floor: %status%"
# FeatureListView.dropMoneyOnDeathButton.lore.enabled.2.no: "No"
# FeatureListView.dropMoneyOnDeathButton.lore.enabled.2.yes: "Yes"
# FeatureListView.dropMoneyOnDeathButton.lore.enabled.3: "**-** Percentage: **%percentage%%**"
# FeatureListView.dropMoneyOnDeathButton.name: "Lose Money on Death"
# FeatureListView.governmentButton.lore.desc1: "This feature allows users to control"
# FeatureListView.governmentButton.lore.desc2: "the entire government aspect of your"
# FeatureListView.governmentButton.lore.desc3: "server (e.g Taxes, Employees,"
# FeatureListView.governmentButton.lore.desc4: "Standing Orders and more)"
# FeatureListView.governmentButton.lore.disabled: "This feature is currently **disabled**"
# FeatureListView.governmentButton.name: "Government Feature"
# FeatureListView.lore.leftClick: "**Left Click** to view"
# FeatureListView.mobDropsButton.lore.click: "Click to manage Drops"
# FeatureListView.mobDropsButton.lore.dropEntry: "A drop with %percentage%% chance"
# FeatureListView.mobDropsButton.lore.drops: "Drops"
# FeatureListView.mobDropsButton.lore.none: "None"
# FeatureListView.mobDropsButton.name: "Mob Drops"
# FeatureListView.title: "Overview > Features"
# FeatureListView.tradeButton.lore.disabled: "This feature is currently **disabled**"
# FeatureListView.tradeButton.lore.enabled.1: "Create Trades.."
# FeatureListView.tradeButton.lore.enabled.2: "**-** with **/trade <Player>**"
# FeatureListView.tradeButton.lore.enabled.3: "**-** with **Shift+Right Clicking** a player"
# FeatureListView.tradeButton.name: "Trade Feature"
# GovernmentAccountView.puttingCreationCostButton.lore: "**Click** to %action%"
# GovernmentAccountView.puttingCreationCostButton.lore.desc1: "This will add all creation cost"
# GovernmentAccountView.puttingCreationCostButton.lore.desc2: "to the government account balance"
# GovernmentAccountView.puttingCreationCostButton.name: "Put Creation Cost"
# GovernmentAccountView.puttingFeesButton.lore: "**Click** to %action%"
# GovernmentAccountView.puttingFeesButton.lore.desc1: "This will add all paid fees"
# GovernmentAccountView.puttingFeesButton.lore.desc2: "to the government account balance"
# GovernmentAccountView.puttingFeesButton.name: "Put Fees"
# GovernmentAccountView.puttingItemAndExpStorageCostButton.lore: "**Click** to %action%"
# GovernmentAccountView.puttingItemAndExpStorageCostButton.lore.desc1: "This will add Item and Exp cost"
# GovernmentAccountView.puttingItemAndExpStorageCostButton.lore.desc2: "to the government account balance"
# GovernmentAccountView.puttingItemAndExpStorageCostButton.name: "Put Item & Exp Storage Cost"
# GovernmentAccountView.takingInterestsButton.lore: "**Click** to %action%"
# GovernmentAccountView.takingInterestsButton.lore.desc1: "This will take all interests payments"
# GovernmentAccountView.takingInterestsButton.lore.desc2: "from the government account balance"
# GovernmentAccountView.takingInterestsButton.name: "Take Interest Payments"
# GovernmentAccountView.takingStartBalanceButton.lore: "**Click** to %action%"
# GovernmentAccountView.takingStartBalanceButton.lore.desc1: "This will take all start balance"
# GovernmentAccountView.takingStartBalanceButton.lore.desc2: "from the government account balance"
# GovernmentAccountView.takingStartBalanceButton.name: "Take Start Balance"
# GovernmentAccountView.title: "Bank > Government"
# ImporterView.lore.click: "Click to **import**"
# ImporterView.lore.takeLonger.1: "Your Import can take"
# ImporterView.lore.takeLonger.2: "longer than usual"
# ImporterView.lore.takeLonger.3: "because of your large"
# ImporterView.lore.takeLonger.4: "**amount of Users** (%amount% Users)"
# ImporterView.success: "Successfully imported balances from **%importer%**"
# ImporterView.title: "Import Data"
# ItemRedeemManager.redeemBalance: "You received %balance%"
# ItemRedeemManager.redeemExp: "You received **%expLevel%** Exp Levels"
# ItemStorageView.gui.itemStack.clickAction: "Click to **withdraw** item"
# ItemStorageView.gui.itemStack.needAtLeast: "You need at least %moneyString% to withdraw this item!"
# ItemStorageView.gui.itemStack.notEnoughSpace: "You don't have enough space in your inventory to withdraw this item!"
# ItemStorageView.gui.itemStack.shiftClickAction: "**Shift + Left Click** to withdraw **%amount%x** this item"
# ItemStorageView.gui.itemStack.withdrawSuccessful: "Successfully withdrawn **%amount%** x **%item%** from your bank account's item storage %optionalMoneyString%"
# ItemStorageView.gui.itemStack.withdrawSuccessful.optionalMoneyString: "and paid %moneyString%"
# ItemStorageView.gui.title: "Item Storage > %bankAccount%"
LoseMoneyOnDeathFeatureView.construct.title: "Recursos> Perder dinheiro na morte"
LoseMoneyOnDeathFeatureView.disabled: "Este recurso está **desativado** no momento"
LoseMoneyOnDeathFeatureView.dropping.lore.append.disabled: "O dinheiro vai desaparecer ao morrer"
LoseMoneyOnDeathFeatureView.dropping.lore.append.enabled: "O dinheiro vai cair no chão ao morrer"
LoseMoneyOnDeathFeatureView.dropping.lore.disabled: "Clique para **ativar** soltar"
LoseMoneyOnDeathFeatureView.dropping.lore.enabled: "Clique para **desativar** soltar"
LoseMoneyOnDeathFeatureView.dropping.name: "Descartando como item"
LoseMoneyOnDeathFeatureView.enable.lore.disabled: "Clique para **ativar** este recurso"
LoseMoneyOnDeathFeatureView.enable.lore.enabled: "Clique para **desativar** este recurso"
LoseMoneyOnDeathFeatureView.enable.name: "Alternancia"
LoseMoneyOnDeathFeatureView.enabled: "Os jogadores perderão **%percentage%%** de seu saldo ao morrer"
LoseMoneyOnDeathFeatureView.enabled.secondLore: "O dinheiro perdido será descartado como um item no chão"
# LoseMoneyOnDeathFeatureView.model.disableLoseMoneyOnDeathInWorlds.lore: "**Left Click** to disable in specific Worlds"
# LoseMoneyOnDeathFeatureView.model.disableLoseMoneyOnDeathInWorlds.name: "Disable LoseMoneyOnDeath in Worlds"
LoseMoneyOnDeathFeatureView.percentage.action.title.main: "Porcentagem de dinheiro"
LoseMoneyOnDeathFeatureView.percentage.action.title.sub: "Digite uma porcentagem de 1 a 100"
LoseMoneyOnDeathFeatureView.percentage.lore.click: "Clique para **alterar** a porcentagem"
LoseMoneyOnDeathFeatureView.percentage.lore.percentage: "Percentagem:"
LoseMoneyOnDeathFeatureView.percentage.name: "Percentagem"
# LoseMoneyOnDeathWorldSelectorView.lore.disabled: "Click to **enable** MobDrops in this world"
# LoseMoneyOnDeathWorldSelectorView.lore.enabled: "Click to **disabled** MobDrops in this world"
# LoseMoneyOnDeathWorldSelectorView.title: "Worlds > Select World"
# MobDopEntityListView.model.name.deselectAll: "Deselect All"
# MobDropEntityListView.button.lore.description.deselected: "This mob does not drop this drop"
# MobDropEntityListView.button.lore.description.selected: "This drop may be dropped by this mob"
# MobDropEntityListView.button.lore.toggle: "Click to"
# MobDropEntityListView.button.lore.toggle.deselected: "select"
# MobDropEntityListView.button.lore.toggle.selected: "deselect"
# MobDropEntityListView.gui.title: "Drop > Entities"
# MobDropEntityListView.model.click: "Click to"
# MobDropEntityListView.model.click.deselectAll: "deselect all"
# MobDropEntityListView.model.click.selectAll: "select all"
# MobDropEntityListView.model.name.selectAll: "Select All"
# MobDropListView.button.lore.chanceOfDrop: "Chance of Drop: **%chance%**%"
# MobDropListView.button.lore.droppingFrom: "Dropping from"
# MobDropListView.button.lore.leftClick: "**Left Click** to **edit** drop"
# MobDropListView.button.lore.noEntities: "None"
# MobDropListView.button.lore.pressQ: "**Press Q** to **delete**"
# MobDropListView.gui.title: "Features > Mob Drops"
# MobDropListView.model.currencyPicker.title: "Create Drop"
# MobDropListView.model.disableMobDropsInWorlds.lore: "**Left Click** to disable MobDrops in specific Worlds"
# MobDropListView.model.disableMobDropsInWorlds.name: "Disable MobDrops in Worlds"
# MobDropListView.model.lore: "Click to **create** drop"
# MobDropListView.model.name: "Create Drop"
# MobDropView.chanceButton.input.invalid: "Could not identify **%input%** as a number"
# MobDropView.chanceButton.input.title.main: "Set Drop Chance"
# MobDropView.chanceButton.input.title.sub: "Type in a value between 1 and 100"
# MobDropView.chanceButton.input.toBig: "The typed in value must be smaller than **100**"
# MobDropView.chanceButton.input.toSmall: "The typed in value must be greater than **0**"
# MobDropView.chanceButton.lore.click: "Click to **change** chance"
# MobDropView.chanceButton.lore.dropPercentage: "Drop Percentage: **%percentage%%**"
# MobDropView.chanceButton.name: "Drop Chance"
# MobDropView.entitiesButton.lore.click: "**Left Click** to edit Entities"
# MobDropView.entitiesButton.lore.droppingFrom: "Dropping from"
# MobDropView.entitiesButton.lore.none: "None"
# MobDropView.entitiesButton.lore.pressQ: "**Press Q** to %status% drop by spawner spawned mob"
# MobDropView.entitiesButton.name: "Entities"
# MobDropView.modelTitle.notPresent: "Could not load drop"
# MobDropView.modelTitle.present: "Drop"
# MobDropView.moneyButton.input.left.invalid: "The input **%input%** is not a floating point number"
# MobDropView.moneyButton.input.left.negative: "The value cannot be **negative**"
# MobDropView.moneyButton.input.left.title.actionbar: "Ex. **1200** for **%value%**"
# MobDropView.moneyButton.input.left.title.main: "Type in a Minimum Value"
# MobDropView.moneyButton.input.left.title.sub: "Type in a value"
# MobDropView.moneyButton.input.left.toBig: "The value must be smaller than %value%"
# MobDropView.moneyButton.input.q.title: "Drop > Change Currency"
# MobDropView.moneyButton.input.right.invalid: "The input **%input%** is not a floating point number"
# MobDropView.moneyButton.input.right.negative: "The value cannot be **negative**"
# MobDropView.moneyButton.input.right.title.actionbar: "Ex. **1200** for **%value%**"
# MobDropView.moneyButton.input.right.title.main: "Type in a Maximum Value"
# MobDropView.moneyButton.input.right.title.sub: "Type in a value"
# MobDropView.moneyButton.input.right.toSmall: "The value must be bigger than %value%"
# MobDropView.moneyButton.lore.leftClick: "**Left Click** to **set** minimum"
# MobDropView.moneyButton.lore.pressQ: "**Press Q** to **switch** currency"
# MobDropView.moneyButton.lore.rightClick: "**Right Click** to **set** maximum"
# MobDropView.moneyButton.lore.value: "The value will be a random in this range"
# MobDropsWorldSelectorView.lore.disabled: "Click to **enable** MobDrops in this world"
# MobDropsWorldSelectorView.lore.enabled: "Click to **disabled** MobDrops in this world"
# MobDropsWorldSelectorView.title: "Worlds > Select World"
# Overview.accountsButton.lore.click: "**Click** to view Accounts"
# Overview.accountsButton.lore.registered: "Registered"
# Overview.accountsButton.name: "Accounts"
# Overview.addonsButton.lore.click: "Click to show Addons"
# Overview.addonsButton.lore.description.firstLine: "Addons can extend the"
# Overview.addonsButton.lore.description.secondLine: "functionality of Ultra Economy"
# Overview.addonsButton.lore.description.thirdLine: "by adding powerful extensions"
# Overview.addonsButton.name: "Coming in future update!"
# Overview.banksButton.lore.click: "**Click** to view Banks"
# Overview.banksButton.lore.created: "Created"
# Overview.banksButton.lore.disabled1: "Enable the **Bank Feature** first"
# Overview.banksButton.lore.disabled2: "to access this button"
# Overview.banksButton.lore.disabled3: "(**Features > Bank Feature**)"
# Overview.banksButton.name: "Bank Accounts"
# Overview.currenciesButton.lore.click: "**Click** to view currencies"
# Overview.currenciesButton.lore.currencies: "Currencies"
# Overview.currenciesButton.name: "Currencies"
# Overview.currenciesButton.vaultCurrency: "Vault Currency"
# Overview.featuresButton.lore: "**Click** to manage features"
# Overview.featuresButton.name: "Features"
# Overview.settingsButton.lore: "**Click** to view Settings"
# Overview.settingsButton.name: "Settings"
PlayerSelectorView.lore: "Clique para **selecionar** jogador"
PlayerSelectorView.title: "Pague> Selecione o jogador"
# SoundSelectorView.lore.leftClick: "**Left Click** to **select** sound"
# SoundSelectorView.lore.rightClick: "**Right Click** to **play** sound"
# SoundSelectorView.title: "Select Sound"
# StandingOrderListView.addStandingOrder.addAction: "**Click** to add a Standing Order via GUI"
# StandingOrderListView.addStandingOrder.currencyPicker.failed: "This currency can't be used in the Bank Feature"
# StandingOrderListView.addStandingOrder.currencyPicker.title: "Standing Order > Used Currency"
# StandingOrderListView.addStandingOrder.playerSelectFailed: "**%name%** already has a standing order"
# StandingOrderListView.addStandingOrder.title: "Add Standing Order"
# StandingOrderListView.addStandingOrder.youNeedAtLeast: "You need at least %amount% to create a new Standing Order"
# StandingOrderListView.interval: "Interval"
# StandingOrderListView.permanent: "Permanent"
# StandingOrdersListView.gui.title: "Standing Orders > List"
# StandingOrdersListView.standingOrderEntryButton.action.left.notAValidNumber: "Not a valid number"
# StandingOrdersListView.standingOrderEntryButton.action.left.title.main: "Paying"
# StandingOrdersListView.standingOrderEntryButton.action.left.title.sub: "Enter a valid balance amount"
# StandingOrdersListView.standingOrderEntryButton.action.shiftLeft.title: "Standing Order > Used Currency"
# StandingOrdersListView.standingOrderEntryButton.action.shiftRight.title.main: "Description"
# StandingOrdersListView.standingOrderEntryButton.action.shiftRight.title.sub: "Enter a description (e.g loan)"
# StandingOrdersListView.standingOrderEntryButton.lore.createdAt: "Created at: **%date%**"
# StandingOrdersListView.standingOrderEntryButton.lore.createdBy: "Created by: **%name%**"
# StandingOrdersListView.standingOrderEntryButton.lore.interval: "Interval: %interval%"
# StandingOrdersListView.standingOrderEntryButton.lore.lastExecution: "Last Execution: **%date%**"
# StandingOrdersListView.standingOrderEntryButton.lore.leftClick: "**Left Click** to change paying amount"
# StandingOrdersListView.standingOrderEntryButton.lore.never: "Never"
# StandingOrdersListView.standingOrderEntryButton.lore.nextInterval: "Next Interval: **%time%**"
# StandingOrdersListView.standingOrderEntryButton.lore.none: "None"
# StandingOrdersListView.standingOrderEntryButton.lore.oneTime: "One Time"
# StandingOrdersListView.standingOrderEntryButton.lore.paying: "Paying: %payingAmount%"
# StandingOrdersListView.standingOrderEntryButton.lore.q: "**Press Q** to **delete** (No fee refund)"
# StandingOrdersListView.standingOrderEntryButton.lore.rightClick: "**Right Click** to change Interval"
# StandingOrdersListView.standingOrderEntryButton.lore.shiftLeftClick: "**Shift + Left Click** to change Currency"
# StandingOrdersListView.standingOrderEntryButton.lore.shiftRightClick: "**Shift + Right Click** to change description"
# Trade.close.receivedCombined: "You received %currencyReceivings% and %expLevelReceivings% Exp Level"
# Trade.close.receivedCurrency: "You received %currencyReceivings%"
# Trade.close.receivedExpLevels: "You received %expLevelReceivings% Exp Level"
# TradeFeatureView..status: "Status"
# TradeFeatureView.clickToTradeButton.lore.click.disabled: "Click to **enable** Click to Trade"
# TradeFeatureView.clickToTradeButton.lore.click.enabled: "Click to **disable** Click to Trade"
# TradeFeatureView.clickToTradeButton.lore.description: "Allow players to start a trade by"
# TradeFeatureView.clickToTradeButton.lore.usage: "Shift + Right Clicking a player"
# TradeFeatureView.clickToTradeButton.name: "Click to Trade"
# TradeFeatureView.disabled: "disabled"
# TradeFeatureView.enabled: "enabled"
# TradeFeatureView.title: "Features > Trade System"
# TradeFeatureView.tradeCommandButton.lore.click.disabled: "Click to **enable** this command"
# TradeFeatureView.tradeCommandButton.lore.click.enabled: "Click to **disabled*** this command"
# TradeFeatureView.tradeCommandButton.lore.description: "Allow players to start a trade with"
# TradeFeatureView.tradeCommandButton.lore.usage: "Player"
# TradeFeatureView.tradeCommandButton.name: "Trade Command"
# TradeSystem.createRequest: "%c%Decline"
# TradeSystem.createRequest.accept: "%a%Accept"
# TradeSystem.createRequest.clickToAccept: "**Click** to accept offer"
# TradeSystem.createRequest.clickToDecline: "**Click** to decline offer"
# TradeSystem.createRequest.pendingWith: "You already have a pending request with **%receiver%**"
# TradeSystem.createRequest.title.main: "Request Sent"
# TradeSystem.createRequest.title.sub: "Sent **%receiver%** a request to trade"
# TradeSystem.createRequest.wait: "You need to wait at least one minute before sending a new request"
# TradeSystem.createRequest.withYou: "**%a%%sender%** %7%wants to trade with you!"
# TradeSystem.createRequest.yourself: "You cannot trade with **yourself**"
# TradeSystem.declineRequest.receiver: "You have declined the trade request of **%sender%**"
# TradeSystem.declineRequest.sender: "Unfortunately **%receiver%** has **declined** your request"
TradeView.Button.AddCurrency.Lore: "Clique para adicionar dinheiro a este comércio"
TradeView.Button.AddCurrency.Name: "Adicionar Moeda"
# TradeView.Button.AddExpButton.Lore: "Click to add Exp Level to this trade"
# TradeView.Button.AddExpButton.Name: "Add Exp Level"
TradeView.Button.Confirm.Lore: "Clique para confirmar esta troca"
TradeView.Button.Confirm.Name: "Confirmar"
TradeView.Button.Lock.Lore: "Clique para **bloquear** seu inventário"
TradeView.Button.Lock.Name: "Bloquear"
TradeView.Button.NotEnoughSpace.Lore: "Você não pode aceitar esta oferta"
TradeView.Button.NotEnoughSpace.Name: "Espaço insuficiente"
TradeView.Button.Unlock.Lore: "Clique para **desbloquear** seu inventário"
TradeView.Button.Unlock.Name: "Desbloquear"
TradeView.Title: "Negociando com %target%"
# UpgradeListView.addUpgrade.action.actionBar: "e.g Business Account"
# UpgradeListView.addUpgrade.action.inputTitle.main: "New Upgrade"
# UpgradeListView.addUpgrade.action.inputTitle.sub: "Enter name of Bank Upgrade"
# UpgradeListView.addUpgrade.addAction: "**Click** to add a Bank Upgrade via GUI"
# UpgradeListView.addUpgrade.title: "Add Bank Upgrade"
# UpgradeListView.allowDowngrade.action: "**Click** to %action% purchasing downgrades"
# UpgradeListView.allowDowngrade.desc1: "When enabled users can also downgrade"
# UpgradeListView.allowDowngrade.desc2: "to cheaper Bank Upgrades and are"
# UpgradeListView.allowDowngrade.desc3: "getting the difference refunded"
# UpgradeListView.allowDowngrade.title: "Purchase Downgrades"
# UpgradeListView.gui.title: "Bank Upgrades > List"
# UpgradeListView.upgrade.action.confirmDeletion: "Confirm deletion of %upgradeName%"
# UpgradeListView.upgrade.lore.bankBalanceLimit: "Bank Balance Limit: %bankBalanceLimit%"
# UpgradeListView.upgrade.lore.description: "Description:"
# UpgradeListView.upgrade.lore.details: "Details:"
# UpgradeListView.upgrade.lore.employeeLimit: "Employee Limit: %employeeLimit%"
# UpgradeListView.upgrade.lore.expStorageLimit: "EXP Storage Limit: %expStorageLimit%"
# UpgradeListView.upgrade.lore.free: "Free"
# UpgradeListView.upgrade.lore.itemStorageLimit: "Item Storage Limit: %itemStorageLimit%"
# UpgradeListView.upgrade.lore.leftClick: "**Left Click** to manage"
# UpgradeListView.upgrade.lore.price: "Price: %price%"
# UpgradeListView.upgrade.lore.remove: "**Press Q** to **remove** upgrade"
# UpgradeListView.upgrade.lore.standingOrderLimit: "Standing Order Limit: %standingOrderLimit%"
# UpgradeListView.upgrade.lore.transactionLimit: "Transaction Limit: %transactionLimit%"
# UpgradeView.BankBalanceLimitButton.UserInput.actionBar: "e.g 10, 25000, 500000"
# UpgradeView.BankBalanceLimitButton.UserInput.title.main: "Bank Balance Limit"
# UpgradeView.BankBalanceLimitButton.UserInput.title.sub: "Enter bank balance limit"
# UpgradeView.BankBalanceLimitButton.lore.bankBalanceLimit: "Bank Balance Limit: **%limit%**"
# UpgradeView.BankBalanceLimitButton.name: "Bank Balance Limit"
# UpgradeView.clickToChange: "Click to **change**"
# UpgradeView.descriptionButton.lore.description: "Description"
# UpgradeView.descriptionButton.name: "Change Description"
# UpgradeView.descriptionButton.userInput.actionBar: "eg. Offers everything for an business"
# UpgradeView.descriptionButton.userInput.title.main: "Change Description"
# UpgradeView.descriptionButton.userInput.title.sub: "Enter a new description"
# UpgradeView.employeeLimitButton.lore.employeeLimit: "Employee Limit: **%limit%**"
# UpgradeView.employeeLimitButton.name: "Employee Limit"
# UpgradeView.employeeLimitButton.userInput.title.main: "Employee Limit"
# UpgradeView.employeeLimitButton.userInput.title.sub: "Enter employee limit"
# UpgradeView.example.10.25.50: "eg. 10, 25, 50"
# UpgradeView.expStorageLimitButton.lore.expStorageLimit: "Exp Storage Limit: **%limit% Level**"
# UpgradeView.expStorageLimitButton.name: "Exp Storage Limit"
# UpgradeView.expStorageLimitButton.userInput.title.main: "Exp Storage Limit"
# UpgradeView.expStorageLimitButton.userInput.title.sub: "Enter exp storage limit"
# UpgradeView.iconButton.lore.icon: "Icon: **%icon%**"
# UpgradeView.iconButton.name: "Change Icon"
# UpgradeView.itemStorageLimitButton.lore.itemStorageLimit: "Item Storage Limit: **%limit%** Slots"
# UpgradeView.itemStorageLimitButton.name: "Item Storage Limit"
# UpgradeView.itemStorageLimitButton.userInput.title.main: "Item Storage Limit"
# UpgradeView.itemStorageLimitButton.userInput.title.sub: "Enter item storage limit"
# UpgradeView.nameButton.lore.click: "Click to **rename** upgrade"
# UpgradeView.nameButton.lore.name: "Name: **%name%**"
# UpgradeView.nameButton.name: "Rename Upgrade"
# UpgradeView.nameButton.userInput.actionBar: "eg. Business Account"
# UpgradeView.nameButton.userInput.title.main: "Rename Upgrade"
# UpgradeView.nameButton.userInput.title.sub: "Enter a new name"
# UpgradeView.priceButton.lore.price: "Price: %price%"
# UpgradeView.priceButton.lore.price.free: "Free"
# UpgradeView.priceButton.name: "Change Price"
# UpgradeView.priceButton.userInput.actionBar: "eg. 100, 5000, 50000"
# UpgradeView.priceButton.userInput.title.main: "Upgrade Price"
# UpgradeView.priceButton.userInput.title.sub: "Enter a new upgrade price"
# UpgradeView.standingOrderLimitButton.lore.standingOrderLimit: "Standing Order Limit: **%limit%**"
# UpgradeView.standingOrderLimitButton.name: "Standing Order Limit"
# UpgradeView.standingOrderLimitButton.userInput.title.main: "Standing Order Limit"
# UpgradeView.standingOrderLimitButton.userInput.title.sub: "Enter a standing order limit"
# UpgradeView.title: "Upgrades > %upgrade%"
# UpgradeView.transactionLimitButton.lore.transactionLimit: "Transaction Limit: **%limit%**"
# UpgradeView.transactionLimitButton.name: "Transaction Limit"
# UpgradeView.transactionLimitButton.userInput.title.main: "Transaction Limit"
# UpgradeView.transactionLimitButton.userInput.title.sub: "Enter transaction limit"
ValueSelectorView.confirm.lore.balanceAfterPayment: "Seu saldo após o pagadort:"
ValueSelectorView.confirm.lore.click: "**Clique** para pagar %value% para **%target%**"
ValueSelectorView.title.noValue: "Pay %target% > Selecione o valor"
ValueSelectorView.title.value: "Pay %value% para %target%"
# VolumePitchEditorView.pitchButton.lore: "Current Pitch: **%currentPitch%**"
# VolumePitchEditorView.pitchButton.loreLeftClick: "**Left Click** to play with **current** pitch & volume"
# VolumePitchEditorView.pitchButton.loreNew: "Changed Pitch: %operator%**%selectedPitch%**"
# VolumePitchEditorView.pitchButton.lorePressQ: "**Press Q** to **save** pitch & volume"
# VolumePitchEditorView.pitchButton.loreRightClick: "**Right Click** to play with **changed** pitch & volume"
# VolumePitchEditorView.pitchButton.loreShiftClick: "**Shift Click** to type in pitch value"
# VolumePitchEditorView.pitchButton.name: "Pitch"
# VolumePitchEditorView.pitchButton.typeInTitleMain: "New Pitch Value"
# VolumePitchEditorView.pitchButton.typeInTitleSub: "Type in the new pitch value"
# VolumePitchEditorView.pitchDownButton.lore: "**Click** to increase pitch by **-** **0.1**"
# VolumePitchEditorView.pitchDownButton.name: "Decrease Pitch"
# VolumePitchEditorView.pitchUpButton.lore: "**Click** to increase pitch by **+** **0.1**"
# VolumePitchEditorView.pitchUpButton.name: "Increase Pitch"
# VolumePitchEditorView.title: "Volume & Pitch Editor"
# VolumePitchEditorView.validNumberRequired: "Please enter a valid number"
# VolumePitchEditorView.volumeButton.lore: "Current Volume: **%currentVolume%**"
# VolumePitchEditorView.volumeButton.loreLeftClick: "**Left Click** to play with **current** pitch & volume"
# VolumePitchEditorView.volumeButton.loreNew: "Changed Volume: %operator%**%selectedVolume%**"
# VolumePitchEditorView.volumeButton.lorePressQ: "**Press Q** to **save** pitch & volume"
# VolumePitchEditorView.volumeButton.loreRightClick: "**Right Click** to play with **changed** pitch & volume"
# VolumePitchEditorView.volumeButton.loreShiftClick: "**Shift Click** to type in volume value"
# VolumePitchEditorView.volumeButton.name: "Volume"
# VolumePitchEditorView.volumeButton.typeInExample: "Ex: **0.5, 1.5, -2.0, -0.1**"
# VolumePitchEditorView.volumeButton.typeInTitleMain: "New Volume Value"
# VolumePitchEditorView.volumeButton.typeInTitleSub: "Type in a new volume value"
# VolumePitchEditorView.volumeDownButton.lore: "**Click** to increase volume by **-** **0.1**"
# VolumePitchEditorView.volumeDownButton.name: "Decrease Volume"
# VolumePitchEditorView.volumeUpButton.lore: "**Click** to increase volume by **+** **0.1**"
# VolumePitchEditorView.volumeUpButton.name: "Increase Volume"
# WithdrawBankBalance.confirm.lore.balanceAfterWithdraw: "Your Balance after the withdraw:"
# WithdrawBankBalance.confirm.lore.click: "**Click** to withdraw %value% from **%bankAccount%**"
# WithdrawBankBalance.lore.additionalFees: "Additional Fees"
# WithdrawBankBalance.lore.overdraftAmountUsage: "Overdraft Amount Usage"
# WithdrawBankBalance.title.noValue: "Withdraw from %bankAccount% > Amount"
# WithdrawBankBalance.title.value: "Withdraw %value% from %bankAccount%"
argument.account: "<Conta>"
# argument.bankAccount: "<BankAccount>"
argument.currency: "<Moeda>"
argument.value: "<Valor>"
command.addBalance: "Adicionou com sucesso **%value%** de **%currency%** ao **%target%**"
command.balance: "Não foi possível encontrar sua conta"
# command.balance.reset: "**%currency%** is **not** a valid Currency"
# command.balanceTop.chat.Title: "**Balance Top** (**%currency%**)"
# command.balanceTop.chat.Title.bank: "**Balance Top** (**%currency%** Bank)"
# command.balanceTop.chat.Title.both: "**Balance Top** (**%currency%** Hand & Bank)"
command.balanceTop.currencyNotValid: "**%currency%** **não** é uma moeda válida"
# command.bank.account.notFound: "Could not find account of **%account%**"
# command.bank.balance.deposit.success: "Successfully deposited %amount% **to %bankAccount%**"
# command.bank.balance.noPermission: "You don't have **access** to that command"
# command.bank.balance.notEnoughBalanceDeposit: "The account need at least **%value%** to deposit this amount"
# command.bank.balance.notEnoughBalanceWithdraw: "The bank account need at least **%value%** to withdraw this amount"
# command.bank.balance.payment.failed.payToggle: "**%playerName%** does not accept any payments"
# command.bank.balance.payment.notEnoughBalance: "You need at least %balance% **in your bank account to execute this payment**"
# command.bank.balance.payment.success: "Successfully transferred %balance% **to** **%account%**"
# command.bank.balance.payment.success.receive: "You got **%value%** from Bank Account **%sender%**"
# command.bank.balance.upgradeRequired: "Upgrade your bank account to deposit more than **%amount%** **%currencyName% into your bank account!**"
# command.bank.balance.withdraw.success: "Successfully withdrew %balance% **from %bankAccount%**"
# command.bank.currency: "Missing main currency"
# command.bank.disabled: "This feature is currently disabled on this server"
# command.bank.others.notFound: "Could not find **%account%'s** bank account"
# command.bank.own.notFound: "Could not find your bank account"
command.editBalance.notFound.account: "Não foi possível encontrar a conta **%account%**"
command.editBalance.notFound.currency: "Não foi possível encontrar a moeda **%currency%**"
command.editBalance.notIdentifyAsNumber: "Não foi possível identificar **%symbol%** como um número"
command.payBalance.consoleExecution: "Este comando não pode ser executado através do console"
# command.payBalance.currencyDecimalBlocked: "This currency does not allow decimals"
# command.payBalance.currencyNotPayable: "This currency can't be used making transactions"
command.payBalance.issue: "Infelizmente, houve um problema ao fazer essa transação"
command.payBalance.minAmount: "Você não pode pagar **menos** do que %value%"
# command.payBalance.payToggle: "**%playerName%** does not accept any payments"
command.payBalance.payYourself: "Você não pode enviar dinheiro para **você mesmo!**"
command.payBalance.playerOffline: "Este jogador não está online"
command.payBalance.successful.receive: "Você conseguiu **%value%** de **%sender%**"
command.payBalance.successful.send: "Você enviou **%value%** para **%target%** com sucesso"
# command.payToggle.toggle: "You have %action% receiving payments"
command.removeBalance: "**%value%** de **%currency%** removido com sucesso de **%target%**"
# command.removeBalance.failed: "**%target%** only has **%value%** of **%currency%** "
command.setBalance: "Definido com sucesso **%currency%** para  **%value%** para  **%target%**"
# command.transfer.sourcesEqual: "From and To should not be equal!"
# command.ueNotifyCommand.toggled: "Successfully %action% **%notificationType%** message"
# expLevelItemFactory.newItem.lore: "Exp Level which will be traded"
# expLevelItemFactory.newItem.name: "%level% Level: Colors.LightPink
# itemStorageView.gui.itemStackDeposit.needAtLeast: "You need at least %moneyString% to deposit this item!"
# itemStorageView.gui.itemStackDeposit.successful: "Successfully deposited **%amount%** x **%item%** into your bank account's item storage %optionalMoneyString%"
# itemStorageView.gui.itemStackDeposit.successful.optionalMoneyString: "and paid %moneyString%!"
# itemStorageView.gui.itemStackDeposit.upgradeRequired: "Upgrade your bank account to deposit more items into your bank account's item storage!"
# itemStorageView.gui.withdrawButton.action.disable: "Click to **disable** Item withdraw"
# itemStorageView.gui.withdrawButton.action.enable: "Click to **enable** Item withdraw"
# itemStorageView.gui.withdrawButton.title: "Toggle Item Withdraw"
# miscellaneousPane.currencySplitterFormat.click: "**Click** to **switch** splitter"
# miscellaneousPane.currencySplitterFormat.commaUsage: "**###,###,###.##** (comma usage)"
# miscellaneousPane.currencySplitterFormat.description: "Decide which splitter should be used"
# miscellaneousPane.currencySplitterFormat.description2: "to format and display balance"
# miscellaneousPane.currencySplitterFormat.description3: "(dot usage is used e.g in European)"
# miscellaneousPane.currencySplitterFormat.dotUsage: "**###.###.###,##** (dot usage)"
# miscellaneousPane.currencySplitterFormat.name: "Currency Format Splitter"
# miscellaneousPane.formatted.placeholder.description: "When activated all Placeholders will be formatted"
# miscellaneousPane.formatted.placeholder.disable: "Click to **disable** Formatted Placeholder"
# miscellaneousPane.formatted.placeholder.enable: "Click to **enable** Formatted Placeholder"
# miscellaneousPane.prefix.title: "Formatted Currency"
# miscellaneousPane.sendActionBarNotices.description: "When disabled, Action Bar Notices won't shop up"
# miscellaneousPane.sendActionBarNotices.description2: "anymore on Player interactions"
# miscellaneousPane.sendActionBarNotices.disable: "Click to **disable** Action Bar Notices"
# miscellaneousPane.sendActionBarNotices.enable: "Click to **enable** Action Bar Notices"
# miscellaneousPane.sendActionBarNotices.name: "Action Bar Notices"
# miscellaneousPane.status: "Status: %status%"
# miscellaneousPane.title: "Miscellaneous"
# mySQLEnabledRequirement.message: "Command not available if MySQL is not configured"
# tradeSystem.commandTradeEngagement.isntAllowedToTrade: "The Player **%player%** isn't allowed to accept trades"
# tradeSystem.commandTradeEngagement.notOnline: "The Player **%player%** is not online"
# transferAssistant.kickMessage: "Ultra Economy will now convert data. The server will shut down when complete"
# transferAssistant.loginMessage: "Ultra Economy is currently transferring. Wait until the server is stopped."
